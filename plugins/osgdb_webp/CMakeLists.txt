SET(LIB_NAME osgdb_verse_webp)
SET(LIBRARY_FILES
    ReaderWriterWebP.cpp
)

#########################################
FIND_PATH(LIBWEBP_INCLUDE_DIR webp/decode.h
    PATHS ${THIRDPARTY_ROOT}/include
    /usr/include
    /usr/local/include
)

FIND_PATH(LIBWEBP_LIB_DIR libwebp.so libwebp.lib
    PATHS ${THIRDPARTY_ROOT}/lib
    /usr/lib /usr/${FIND_LIB_POSTFIX}
    /usr/local/lib /usr/local/${FIND_LIB_POSTFIX}
)
#########################################

IF(LIBWEBP_INCLUDE_DIR AND LIBWEBP_LIB_DIR)

    INCLUDE_DIRECTORIES(${LIBWEBP_INCLUDE_DIR})
    LINK_DIRECTORIES(${LIBWEBP_LIB_DIR})
    SET_PROPERTY(GLOBAL APPEND PROPERTY VERSE_PLUGIN_LIBRARIES "${LIB_NAME}")
    IF(VERSE_STATIC_BUILD)
        NEW_LIBRARY(${LIB_NAME} STATIC)
    ELSE()
        NEW_LIBRARY(${LIB_NAME} SHARED)
    ENDIF()

    SET_PROPERTY(TARGET ${LIB_NAME} PROPERTY FOLDER "PLUGINS")
    TARGET_COMPILE_OPTIONS(${LIB_NAME} PUBLIC -D_SCL_SECURE_NO_WARNINGS)
    TARGET_LINK_LIBRARIES(${LIB_NAME} osgVerseDependency osgVerseReaderWriter libwebp)
    LINK_OSG_LIBRARY(${LIB_NAME} OpenThreads osg osgDB osgUtil)

    INSTALL(TARGETS ${LIB_NAME} EXPORT ${LIB_NAME}
            RUNTIME DESTINATION ${INSTALL_BINDIR} COMPONENT libosgverse
            LIBRARY DESTINATION ${INSTALL_LIBDIR} COMPONENT libosgverse
            ARCHIVE DESTINATION ${INSTALL_ARCHIVEDIR} COMPONENT libosgverse-dev)
    IF(NOT VERSE_STATIC_BUILD)
        IF(MSVC AND VERSE_INSTALL_PDB_FILES)
            INSTALL(FILES $<TARGET_PDB_FILE:${LIB_NAME}> DESTINATION ${INSTALL_BINDIR} OPTIONAL)
        ENDIF()
    ENDIF()
    
ELSE(LIBWEBP_INCLUDE_DIR AND LIBWEBP_LIB_DIR)

    MESSAGE("[osgVerse] Dependency libWebP not found. ${LIB_NAME} will be ignored.")

ENDIF(LIBWEBP_INCLUDE_DIR AND LIBWEBP_LIB_DIR)
